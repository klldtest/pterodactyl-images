name: Docker Build & Push

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  USERNAME: klldtest

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.images.outputs.matrix }}
    steps:
      - id: images
        run: |
          echo 'matrix<<EOF' >> $GITHUB_OUTPUT
          echo '[
            {"name": "lavalink", "file": "./lavalink/lavalink.Dockerfile"},
            {"name": "nodejs_16", "file": "./nodejs/node16.Dockerfile"},
            {"name": "nodejs_18", "file": "./nodejs/node18.Dockerfile"},
            {"name": "nodejs_20", "file": "./nodejs/node20.Dockerfile"},
            {"name": "nodejs_22", "file": "./nodejs/node22.Dockerfile"},
            {"name": "python_38", "file": "./python/python38.Dockerfile"},
            {"name": "python_39", "file": "./python/python39.Dockerfile"},
            {"name": "python_310", "file": "./python/python310.Dockerfile"},
            {"name": "python_311", "file": "./python/python311.Dockerfile"}
          ]' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.setup.outputs.images) }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to registries
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ env.USERNAME }} --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.image.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.USERNAME }}/pterodactyl-images:${{ matrix.image.name }}
            ${{ env.REGISTRY }}/${{ env.USERNAME }}/pterodactyl-images:${{ matrix.image.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
